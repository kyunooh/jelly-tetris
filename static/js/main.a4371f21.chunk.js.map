{"version":3,"sources":["playview/types.js","playview/operations/gridOperations.js","information/types.js","playview/operations/controlOperations.js","reducers/tetrisReducer.js","information/operations.js","rootReducer.js","playview/actions.js","sagas.js","initializeStore.js","playview/Cell.js","playview/Grid.js","playview/GameOver.js","playview/PlayView.js","playview/PlayViewContainer.js","information/InformationWindow.js","information/action.js","information/InformationWindowContainer.js","App.js","serviceWorker.js","index.js"],"names":["TICK","ROTATE","DROP","HOLD","TICK_TIMER","kick","Audio","PADDING","tetriminos","0","1","2","3","4","5","6","setCurrentLocation","state","newState","Object","objectSpread","findLeftUpper","r","grid","length","c","currentBlockLocation","copyGrid","map","arr","slice","isEndTick","row","newGrid","column","doTick","localStorage","setItem","JELLY_TETRIS","JSON","stringify","newBlock","currentBlock","currentBlockNumber","Math","floor","random","toConsumableArray","nextBlockNumber","nextBlock","hold","holdBlock","temporaryHoldBlockNumber","block","gameOver","createNewBlock","dropping","canHold","play","filled","removeLines","splice","unshift","Array","fill","removedLines","levels","RESET","whoosh","cellIsCurrentBlock","cell","canNotRotate","cr","cc","doRotate","rotatedTetrimino","w","h","tetrimino","i","j","push","rotateBlock","cStep","arguments","undefined","rStep","initialState","existTetris","getItem","parse","playBgm","handleActions","_handleActions","defineProperty","needChange","doMoveLeft","originValue","doMoveRight","doDrop","doReset","doHold","doPlayBgm","doPauseBgm","createReducer","asyncReducers","combineReducers","tetrisReducer","tick","createAction","moveLeft","moveRight","rotate","drop","reset","tickTimer","tickSaga","watchTickSaga","rootSaga","delay","ms","Promise","res","setTimeout","regenerator_default","a","wrap","_context","prev","next","select","sent","pow","put","stop","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","initializeStore","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","injectReducer","key","reducer","replaceReducer","run","Cell","props","blockNumber","react_default","createElement","className","concat","Grid","rows","cells","playview_Cell","playview_GameOver","id","PlayView","document","onkeydown","e","playview_Grid","connect","dispatch","tetrisActions","playview_PlayView","InformationWindow","this","setBgm","bgmEl","bgmAudio","current","console","log","playbackRate","pause","BlockGrid","ref","preventFocus","style","width","height","onClick","controls","onPause","pauseBgm","onPlay","loop","src","type","href","text-decoration","color","font-size","React","Component","emptyRow","blockGrid","createRef","src_information_InformationWindow","focus","App","es","playview_PlayViewContainer","information_InformationWindowContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4371f21.chunk.js","sourcesContent":["export const TICK = \"jelly-tetris/tick\";\nexport const MOVE_LEFT = \"jelly-tetris/moveLeft\";\nexport const MOVE_RIGHT = \"jelly-tetris/moveRight\";\nexport const ROTATE = \"jelly-tetris/rotate\";\nexport const DROP = \"jelly-tetris/drop\";\nexport const HOLD = \"jelly-tetris/hold\";\nexport const TICK_TIMER = \"jelly-tetris/tickTimer\";\n","import {JELLY_TETRIS} from \"../../reducers/tetrisReducer\";\n\nconst kick = new Audio(\"http://jellyms.kr/jelly-tetris/kick.wav\");\n\nconst PADDING = 3;\n// I J L O T Z S\nexport const tetriminos = {\n  0: [[11, 11, 11, 11]],\n  1: [[12, 12, 12], [0, 0, 12]],\n  2: [[13, 13, 13], [13, 0, 0]],\n  3: [[14, 14], [14, 14]],\n  4: [[15, 15, 15], [0, 15, 0]],\n  5: [[16, 16, 0], [0, 16, 16]],\n  6: [[0, 17, 17], [17, 17, 0]]\n};\n\nexport const setCurrentLocation = (state) => {\n  const newState = { ...state };\n  let findLeftUpper = false;\n  for (let r = 0; r < newState.grid.length; r++) {\n    for (let c = 0; c < newState.grid[r].length; c++) {\n      if (newState.grid[r][c] > 10) {\n        newState.currentBlockLocation = [r, c];\n        findLeftUpper = true;\n        break;\n      }\n    }\n    if (findLeftUpper) break;\n  }\n  return newState;\n}\n\nexport const copyGrid = grid =>\n  grid.map(arr => {\n    return arr.slice();\n  });\n\nfunction isEndTick(row, state, newGrid, column) {\n  return (\n    row === state.grid.length - 1 ||\n    (newGrid[row + 1][column] < 10 && newGrid[row + 1][column] > 0)\n  );\n}\n\nexport const doTick = state => {\n  let newState = { ...state };\n  localStorage.setItem(JELLY_TETRIS, JSON.stringify(newState));\n  let newGrid = copyGrid(newState.grid);\n  if (newState.newBlock) {\n    newState = createNewBlock(newGrid, newState);\n    newState.newBlock = false;\n    newState.dropping = false;\n    if (!newState.hold) newState.canHold = true;\n    newState.hold = false;\n    newState.grid = newGrid;\n\n    newState = setCurrentLocation(newState);\n    return newState;\n  }\n  for (let row = newGrid.length - 1; row >= 0; row--) {\n    for (let column = 0; column < newGrid[row].length; column++) {\n      if (newGrid[row][column] > 10) {\n        if (isEndTick(row, newState, newGrid, column)) {\n          if (!newState.gameOver) kick.play();\n          newGrid = copyGrid(newState.grid);\n          newState.newBlock = true;\n          // Remove Filled Block\n          for (let r = 0; r < newGrid.length; r++) {\n            const row = newGrid[r];\n            let filled = true;\n            for (let c = 0; c < row.length; c++) {\n              if (row[c] && row[c] > 10) row[c] -= 10;\n              if (!row[c]) filled = false;\n              if (filled && c === row.length - 1) {\n                removeLines(newGrid, r, newState);\n              }\n            }\n          }\n          newState.grid = newGrid;\n          return doTick(newState);\n        }\n        newGrid[row + 1][column] = newGrid[row][column];\n        newGrid[row][column] = 0;\n      }\n    }\n  }\n  newState.grid = newGrid;\n  return setCurrentLocation(newState);\n\n  function removeLines(grid, row, state) {\n    grid.splice(row, 1);\n    grid.unshift(Array(10).fill(0));\n    state.removedLines += 1;\n    if (state.removedLines % 8 === 0) {\n      state.levels += 1;\n    }\n  }\n\n  function createNewBlock(grid, state) {\n    let newState = { ...state };\n\n    if (newState.currentBlock.length === 0) {\n      newState.currentBlockNumber = Math.floor(Math.random() * 7);\n      newState.currentBlock = [...tetriminos[newState.currentBlockNumber]];\n      newState.nextBlockNumber = Math.floor(Math.random() * 7);\n      newState.nextBlock = [...tetriminos[newState.nextBlockNumber]];\n    } else if (newState.hold && newState.holdBlock.length > 0) {\n      newState.temporaryHoldBlockNumber = newState.currentBlockNumber;\n      newState.currentBlock = [...newState.holdBlock];\n    } else if (newState.hold) {\n      newState.temporaryHoldBlockNumber = newState.currentBlockNumber;\n      newState.currentBlock = [...newState.nextBlock];\n      newState.currentBlockNumber = newState.nextBlockNumber;\n      newState.nextBlockNumber = Math.floor(Math.random() * 7);\n      const block = tetriminos[newState.nextBlockNumber];\n      newState.nextBlock = [...block];\n    } else {\n      newState.currentBlock = [...newState.nextBlock];\n      newState.currentBlockNumber = newState.nextBlockNumber;\n      newState.nextBlockNumber = Math.floor(Math.random() * 7);\n      const block = tetriminos[newState.nextBlockNumber];\n      newState.nextBlock = [...block];\n    }\n\n    for (let row = 0; row < newState.currentBlock.length; row++) {\n      for (\n        let column = 0;\n        column < newState.currentBlock[row].length;\n        column++\n      ) {\n        if (grid[row][column + PADDING] > 0 && grid[row][column + PADDING] < 10)\n          newState.gameOver = true;\n        grid[row][column + PADDING] = newState.currentBlock[row][column];\n      }\n    }\n    return newState;\n  }\n};\n\n\n","export const PLAY_BGM = \"jelly-tetris/playBgm\";\nexport const PAUSE_BGM = \"jelly-tetris/pauseBgm\";\nexport const RESET = \"jelly-tetris/reset\";","import {copyGrid, doTick, setCurrentLocation, tetriminos} from \"./gridOperations\";\n\nconst whoosh = new Audio(\"http://jellyms.kr/jelly-tetris/whoosh.wav\");\n\nconst cellIsCurrentBlock = cell => {\n  return cell > 10;\n};\n\nfunction canNotRotate(newGrid, r, cr, c, cc) {\n  return (\n    r + cr >= newGrid.length ||\n    c + cc >= newGrid[0].length ||\n    newGrid[r + cr][c + cc]\n  );\n}\n\nconst rotateBlock = (state, rotatedTetrimino, cStep = 0, rStep = 0) => {\n  let newState = {...state};\n  if (cStep < -4) {\n    if (rStep > 2) {\n      return;\n    }\n    rotateBlock(newState, rotatedTetrimino, -1, rStep + 1);\n    return newState;\n  }\n  if (rStep > 2) {\n    if (cStep > 0) {\n      rotateBlock(newState, rotatedTetrimino, -1);\n    }\n    return newState;\n  }\n  if (cStep > 3) {\n    rotateBlock(newState, rotatedTetrimino, 0, rStep + 1);\n    return newState;\n  }\n\n  const newGrid = copyGrid(newState.grid);\n  for (let r = 0; r < newGrid.length; r++) {\n    for (let c = 0; c < newGrid[r].length; c++) {\n      if (newGrid[r][c] > 10) {\n        newGrid[r][c] = 0;\n      }\n    }\n  }\n  // current coordinate\n  const cr = newState.currentBlockLocation[0] + rStep;\n  const cc = newState.currentBlockLocation[1] + cStep;\n  for (let r = 0; r < rotatedTetrimino.length; r++) {\n    for (let c = 0; c < rotatedTetrimino[r].length; c++) {\n      if (canNotRotate(newGrid, r, cr, c, cc)) {\n        if (cStep >= 0)\n          rotateBlock(newState, rotatedTetrimino, cStep + 1, rStep);\n        else rotateBlock(newState, rotatedTetrimino, cStep - 1, rStep);\n        return newState;\n      }\n      newGrid[r + cr][c + cc] = rotatedTetrimino[r][c];\n    }\n  }\n  newState.currentBlock = rotatedTetrimino;\n  newState.grid = [...newGrid];\n  return newState;\n};\nexport const doRotate = state => {\n  let newState = {...state};\n  whoosh.play();\n  const rotatedTetrimino = [];\n  const w = newState.currentBlock.length;\n  const h = newState.currentBlock[0].length;\n  const tetrimino = newState.currentBlock;\n\n  for (let i = 0; i < h; i++) {\n    const row = [];\n    for (let j = 0; j < w; j++) {\n      row.push(tetrimino[w - (w - j - 1) - 1][h - i - 1]);\n    }\n    rotatedTetrimino.push(row);\n  }\n  return rotateBlock(newState, rotatedTetrimino);\n};\nexport const doDrop = state => {\n  let newState = {...state};\n  newState.dropping = true;\n  while (newState.dropping) {\n    newState = doTick(newState);\n  }\n\n  return newState;\n};\nexport const doMoveLeft = state => {\n  let newState = {...state};\n  const newGrid = copyGrid(newState.grid);\n  let needChange = true;\n  for (let r = newGrid.length - 1; r >= 0; r--) {\n    const row = newGrid[r];\n    for (let c = 0; c < row.length; c++) {\n      if (cellIsCurrentBlock(row[c])) {\n        if (row[c - 1] === 0) {\n          newGrid[r][c - 1] = newGrid[r][c];\n          newGrid[r][c] = 0;\n        } else {\n          needChange = false;\n        }\n      }\n    }\n  }\n\n  if (needChange) newState.grid = newGrid;\n  return setCurrentLocation(newState);\n};\nexport const doMoveRight = state => {\n  let newState = {...state};\n  const newGrid = copyGrid(newState.grid);\n  let needChange = true;\n\n  for (let r = newGrid.length - 1; r >= 0; r--) {\n    const row = newGrid[r];\n    for (let c = row.length - 1; c >= 0; c--) {\n      if (cellIsCurrentBlock(row[c])) {\n        if (row[c + 1] === 0) {\n          const originValue = newGrid[r][c];\n          newGrid[r][c] = 0;\n          newGrid[r][c + 1] = originValue;\n        } else {\n          needChange = false;\n        }\n      }\n    }\n  }\n\n  if (needChange) newState.grid = newGrid;\n  newState = setCurrentLocation(newState);\n  return {...newState};\n};\nexport const doHold = state => {\n  let newState = {...state};\n\n  if (!newState.canHold) return {...newState};\n  newState.canHold = false;\n  newState.hold = true;\n  for (let r = 0; r < newState.grid.length; r++) {\n    for (let c = 0; c < newState.grid[r].length; c++) {\n      if (newState.grid[r][c] > 10) newState.grid[r][c] = 0;\n    }\n  }\n\n  newState.newBlock = true;\n  newState = doTick(newState);\n  newState.holdBlock = tetriminos[newState.temporaryHoldBlockNumber];\n  return newState;\n};","import {handleActions} from \"redux-actions\";\nimport {DROP, HOLD, MOVE_LEFT, MOVE_RIGHT, ROTATE, TICK} from \"../playview/types\";\nimport {\n  doTick\n} from \"../playview/operations/gridOperations\";\nimport {doPauseBgm, doPlayBgm, doReset} from \"../information/operations\";\nimport {PAUSE_BGM, PLAY_BGM, RESET} from \"../information/types\";\nimport {doDrop, doHold, doMoveLeft, doMoveRight, doRotate} from \"../playview/operations/controlOperations\";\n\nexport const JELLY_TETRIS = \"jelly-tetris\";\nexport const initialState = state => {\n  const existTetris = localStorage.getItem(JELLY_TETRIS);\n  if (existTetris) {\n    return JSON.parse(existTetris);\n  }\n  return {\n    newBlock: true,\n    gameOver: false,\n    dropping: false,\n    hold: false,\n    canHold: true,\n    removedLines: 0,\n    levels: 1,\n    currentBlock: [],\n    currentBlockNumber: -1,\n    nextBlock: [],\n    nextBlockNumber: -1,\n    holdBlock: [],\n    playBgm: state ? state.playBgm : true,\n    temporaryHoldBlockNumber: 0,\n    currentBlockLocation: [0, 0],\n    grid: Array(16).fill(Array(10).fill(0))\n  };\n};\n\nexport default handleActions(\n  {\n    [TICK]: state => doTick(state),\n    [MOVE_LEFT]: state => doMoveLeft(state),\n    [MOVE_RIGHT]: state => doMoveRight(state),\n    [ROTATE]: state => doRotate(state),\n    [DROP]: state => doDrop(state),\n    [RESET]: state => doReset(state),\n    [HOLD]: state => doHold(state),\n    [PLAY_BGM]: state => doPlayBgm(state),\n    [PAUSE_BGM]: state => doPauseBgm(state)\n  },\n  initialState()\n);\n","import {initialState, JELLY_TETRIS} from \"../reducers/tetrisReducer\";\n\nexport const doPlayBgm = state => {\n  const newState = {...state};\n  newState.playBgm = true;\n  return newState;\n};\n\nexport const doPauseBgm = state => {\n  const newState = {...state};\n  newState.playBgm = false;\n  return newState;\n};\n\nexport const doReset = state => {\n  localStorage.setItem(JELLY_TETRIS, \"\");\n  return initialState(state);\n};","import {combineReducers} from 'redux';\nimport tetrisReducer from \"./reducers/tetrisReducer\";\n\nconst createReducer = asyncReducers =>\n  combineReducers({\n    tetrisReducer,\n    ...asyncReducers\n  });\n\nexport default createReducer;","import {createAction} from \"redux-actions\";\nimport {DROP, HOLD, MOVE_LEFT, MOVE_RIGHT, ROTATE, TICK, TICK_TIMER} from \"./types\";\nimport {RESET} from \"../information/types\";\n\nexport const tick = createAction(TICK);\nexport const moveLeft = createAction(MOVE_LEFT);\nexport const moveRight = createAction(MOVE_RIGHT);\nexport const rotate = createAction(ROTATE);\nexport const drop = createAction(DROP);\nexport const reset = createAction(RESET);\nexport const hold = createAction(HOLD);\nexport const tickTimer = createAction(TICK_TIMER);","import { all, takeLatest, select, put } from \"redux-saga/effects\";\nimport {tick} from \"./playview/actions\";\nimport {TICK_TIMER} from \"./playview/types\";\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport function* tickSaga() {\n  const levels = yield select((state) => state.tetrisReducer.levels);\n\n  yield delay(1000 * Math.pow(0.85, levels));\n  yield put(tick());\n}\n\nexport function* watchTickSaga() {\n  yield takeLatest(TICK_TIMER, () => tickSaga());\n}\n\nexport function* rootSaga() {\n  yield all([watchTickSaga()]);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport createReducer from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootSaga } from \"./sagas\";\n\nconst initializeStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(createReducer(), applyMiddleware(sagaMiddleware));\n  store.asyncReducers = {};\n\n  store.injectReducer = (key, reducer) => {\n    store.asyncReducers[key] = reducer;\n    store.replaceReducer(createReducer(store.asyncReducers));\n  };\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default initializeStore;\n","import React from \"react\";\nimport \"./Cell.scss\";\n\nfunction Cell(props) {\n  return props.blockNumber ? (\n    <span className={`cell fill-${props.blockNumber}`}>&nbsp;</span>\n  ) : (\n    <span className=\"cell empty\">&nbsp;</span>\n  );\n}\n\nexport default Cell;\n","import React from \"react\";\nimport Cell from \"./Cell\";\n\nfunction Grid(props) {\n  const { grid } = props;\n  const rows = [];\n\n  function cells(row) {\n    const cells = [];\n    for (let column = 0; column < grid[row].length; column++) {\n      cells.push(\n        <Cell key={`${row}-${column}`} blockNumber={grid[row][column]} />\n      );\n    }\n    return cells;\n  }\n\n  for (let row = 0; row < grid.length; row++) {\n    rows.push(\n      <div className=\"row\" key={row}>\n        {cells(row)}\n      </div>\n    );\n  }\n\n  return rows;\n}\n\nexport default Grid;\n","import React from \"react\";\nimport \"./GameOver.scss\";\n\nexport default () => <div id=\"game-over\">Game Over</div>;\n","import React from \"react\";\nimport \"./PlayView.scss\";\nimport Grid from \"./Grid\";\nimport GameOver from \"./GameOver\";\n\nfunction PlayView(props) {\n  const grid = props.grid;\n  props.tickTimer( );\n\n  document.onkeydown = e => {\n    if (e.key === \"ArrowLeft\") {\n      props.moveLeft();\n    }\n\n    if (e.key === \"ArrowRight\") {\n      props.moveRight();\n    }\n\n    if (e.key === \"ArrowDown\") {\n      props.tick();\n    }\n\n    if (e.key === \"ArrowUp\") {\n      props.rotate();\n    }\n\n    if (e.key === \" \") {\n      props.drop();\n    }\n\n    if (e.key === \"Shift\") {\n      props.hold();\n    }\n  };\n\n  return (\n    <div className=\"play-view\">\n      {props.gameOver ? <GameOver /> : <Grid grid={grid} />}\n    </div>\n  );\n}\n\nexport default PlayView;\n","import { connect } from \"react-redux\";\nimport * as tetrisActions from \"./actions\";\nimport PlayView from \"./PlayView\";\nimport React from \"react\";\n\nconst PlayViewContainer = props => {\n  const handleTick = () => {\n    props.tick();\n  };\n  const handleMoveLeft = () => {\n    props.moveLeft();\n  };\n  const handleMoveRight = () => {\n    props.moveRight();\n  };\n  const handleRotate = () => {\n    props.rotate();\n  };\n  const handleDrop = () => {\n    props.drop();\n  };\n\n  const tickTimer = () => {\n    props.tickTimer();\n  };\n\n  const handleHold = () => {\n    props.hold();\n  };\n\n  return (\n    <PlayView\n      tick={handleTick}\n      moveLeft={handleMoveLeft}\n      moveRight={handleMoveRight}\n      rotate={handleRotate}\n      drop={handleDrop}\n      tickTimer={tickTimer}\n      hold={handleHold}\n      grid={props.grid}\n      levels={props.levels}\n      gameOver={props.gameOver}\n    />\n  );\n};\n\nexport default connect(\n  state => ({ ...state.tetrisReducer }),\n  dispatch => ({\n    tick: () => dispatch(tetrisActions.tick()),\n    moveLeft: () => dispatch(tetrisActions.moveLeft()),\n    moveRight: () => dispatch(tetrisActions.moveRight()),\n    rotate: () => dispatch(tetrisActions.rotate()),\n    drop: () => dispatch(tetrisActions.drop()),\n    tickTimer: () => dispatch(tetrisActions.tickTimer()),\n    hold: () => dispatch(tetrisActions.hold())\n  })\n)(PlayViewContainer);\n","import React from \"react\";\nimport \"./InformationWindow.scss\";\nimport Grid from \"../playview/Grid\";\n\nclass InformationWindow extends React.Component {\n  componentDidUpdate() {\n    this.setBgm();\n  }\n\n  setBgm() {\n    const bgmEl = this.props.bgmAudio.current;\n    console.log(bgmEl);\n    if (bgmEl) {\n      bgmEl.playbackRate = 0.96 + 0.04 * this.props.levels;\n      if (this.props.playBgm) {\n        bgmEl.play();\n      } else {\n        bgmEl.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"information-window\">\n        <Grid grid={BlockGrid(this.props.nextBlock)} />\n        <div>NEXT</div>\n        <Grid grid={BlockGrid(this.props.holdBlock)} />\n        <div>HOLD (shift)</div>\n\n        <div id=\"removed-lines\">Lines: {this.props.removedLines}</div>\n        <div id=\"levels\">Level: {this.props.levels}</div>\n        <button\n          id=\"prevent-reset\"\n          ref={this.props.preventFocus}\n          style={{ width: \"0px\", height: \"0px\" }}\n        />\n        <button className=\"reset-button\" onClick={this.props.reset}>\n          Reset\n        </button>\n        <div id=\"audio-panel\">\n          <audio\n            id=\"bgm-audio\"\n            ref={this.props.bgmAudio}\n            controls\n            onPause={this.props.pauseBgm}\n            onPlay={this.props.playBgm}\n            loop\n          >\n            <source\n              src=\"http://jellyms.kr/jelly-tetris/tetris.ogg\"\n              type=\"audio/ogg; codecs=vorbis\"\n            />\n          </audio>\n        </div>\n        <div>\n          <a\n            href=\"https://github.com/kyunooh/jelly-tetris\"\n            style={{\n              \"text-decoration\": \"none\",\n              color: \"#AAF\",\n              \"font-size\": \"20px\"\n            }}\n          >\n            Github\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst PADDING = 1;\nconst BlockGrid = block => {\n  const emptyRow = Array(5).fill(0);\n  const blockGrid = [\n    [...emptyRow],\n    [...emptyRow],\n    [...emptyRow],\n    [...emptyRow]\n  ];\n\n  for (let r = 0; r < block.length; r++) {\n    for (let c = 0; c < block[r].length; c++) {\n      blockGrid[r + PADDING][c + PADDING] = block[r][c];\n    }\n  }\n  return blockGrid;\n};\n\nexport default InformationWindow;\n","import {createAction} from \"redux-actions\";\nimport {PAUSE_BGM, PLAY_BGM} from \"./types\";\n\nexport const playBgm = createAction(PLAY_BGM);\nexport const pauseBgm = createAction(PAUSE_BGM);","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport InformationWindow from \"./InformationWindow\";\nimport * as tetrisActions from \"../playview/actions\";\nimport { pauseBgm, playBgm } from \"./action\";\n\nconst InformationWindowContainer = props => {\n  const preventFocus = React.createRef();\n  const bgmAudio = React.createRef();\n\n  const handleReset = () => {\n    props.reset();\n    preventFocus.current.focus();\n  };\n\n  const playBgm = () => {\n    props.playBgm();\n    preventFocus.current.focus();\n  };\n\n  const pauseBgm = () => {\n    props.pauseBgm();\n    preventFocus.current.focus();\n  };\n\n  return (\n    <InformationWindow\n      nextBlock={props.nextBlock}\n      holdBlock={props.holdBlock}\n      removedLines={props.removedLines}\n      levels={props.levels}\n      preventFocus={preventFocus}\n      bgmAudio={bgmAudio}\n      playBgm={playBgm}\n      pauseBgm={pauseBgm}\n      reset={handleReset}\n    />\n  );\n};\n\nexport default connect(\n  state => ({ ...state.tetrisReducer }),\n  dispatch => ({\n    reset: () => dispatch(tetrisActions.reset()),\n    pauseBgm: () => dispatch(pauseBgm()),\n    playBgm: () => dispatch(playBgm())\n  })\n)(InformationWindowContainer);\n","import React from 'react';\nimport './App.scss';\nimport initializeStore from \"./initializeStore\";\nimport {Provider} from \"react-redux\";\nimport PlayViewContainer from \"./playview/PlayViewContainer\";\nimport InformationWindowContainer from \"./information/InformationWindowContainer\";\n\n\nconst store = initializeStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <PlayViewContainer />\n        <InformationWindowContainer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}